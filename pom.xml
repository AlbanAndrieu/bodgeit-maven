<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<parent>
		<artifactId>sample</artifactId>
		<groupId>com.nabla.project.servers.sample</groupId>
		<version>1.0.1-SNAPSHOT</version>
	</parent>
	<groupId>com.nabla.project.servers.sample</groupId>
	<artifactId>thebodgeitstore</artifactId>
	<version>1.4-SNAPSHOT</version>
	<packaging>war</packaging>
	<name>thebodgeitstore</name>
	<url>https://github.com/AlbanAndrieu/bodgeit-maven</url>
	<prerequisites>
		<maven>3.0.4</maven>
	</prerequisites>
	<scm>
		<connection>scm:git:ssh://git@github.com/AlbanAndrieu/bodgeit-maven.git</connection>
		<developerConnection>scm:git:ssh://git@github.com/AlbanAndrieu/bodgeit-maven.git</developerConnection>
		<url>https://github.com/AlbanAndrieu/bodgeit-maven</url>
	</scm>
	<issueManagement>
		<system>GitHub Issues</system>
		<url>https://github.com/AlbanAndrieu/bodgeit-maven/issues</url>
	</issueManagement>
	<ciManagement>
		<system>Jenkins</system>
		<url>${JOB_URL}</url>
	</ciManagement>

	<properties>
		<!-- jenkins cargo 8079,8179,8279 -->
		<cargo.ajp.port>9010</cargo.ajp.port>
		<!-- if you want a remote debugging on a different a address override on
			command line with -Dcargo.debug.addres=xxxx -->
		<cargo.debug.address>8000</cargo.debug.address>
		<!-- if you want to start remote debugging session suspended override on
			command line with -Dcargo.debug.suspend=y -->
		<cargo.debug.suspend>y</cargo.debug.suspend>

		<!-- cargo.port must be used by jenkins to overriden using a pool of tcp
			port -->
		<cargo.host>localhost</cargo.host>
		<!--<cargo.jboss.ajp.port>${cargo.ajp.port}</cargo.jboss.ajp.port> -->
		<!--<cargo.jboss.management.native.port>9995</cargo.jboss.management.native.port> -->
		<!--<cargo.jboss.management.http.port>9996</cargo.jboss.management.http.port> -->
		<!--<cargo.jboss.remoting.transport.port>4547</cargo.jboss.remoting.transport.port> -->
		<cargo.jetty.jmx.activation>-Dcom.sun.management.jmxremote
			-Dcom.sun.management.jmxremote.ssl=false
			-Dcom.sun.management.jmxremote.authenticate=false
			-Dcom.sun.management.jmxremote.port=${cargo.jmx.rmi.port}
			-Djetty.jmxrmihost=localhost
			-Djetty.jmxrmiport=${cargo.jmx.rmi.port}</cargo.jetty.jmx.activation>
		<cargo.jmx.rmi.port>1099</cargo.jmx.rmi.port>
		<cargo.remote.password>microsoft</cargo.remote.password>
		<cargo.remote.user>admin</cargo.remote.user>
		<cargo.rmi.port>8079</cargo.rmi.port>
		<cargo.tomcat.ajp.port>${cargo.ajp.port}</cargo.tomcat.ajp.port>
		<cargo.tomcat.jmx.activation>-Dcom.sun.management.jmxremote
			-Dcom.sun.management.jmxremote.ssl=false
			-Dcom.sun.management.jmxremote.authenticate=false
			-Dcom.sun.management.jmxremote.port=${cargo.jmx.rmi.port}</cargo.tomcat.jmx.activation>
		<cargo.wait>false</cargo.wait>
		<cobertura.format>xml</cobertura.format>
		<commons.lang.version>2.6</commons.lang.version>
		<commons.lang3.version>3.0</commons.lang3.version>
		<!-- default url used by selenium butcan be ovverrided doing mvn clean verify
			-Psample -Dserver=jetty9x -Ddatabase=derby -Dwebdriver.base.url=http://localhost:9090 -->
		<javaagent></javaagent>
		<jdbc.artifactId>${jdbc.client.artifactId}</jdbc.artifactId>
		<jdbc.client.artifactId>hsqldb</jdbc.client.artifactId>

		<jdbc.groupId>org.hsqldb</jdbc.groupId>

		<jdbc.org.hsqldb.version>2.3.1</jdbc.org.hsqldb.version>
		<jdbc.version>${jdbc.org.hsqldb.version}</jdbc.version>

		<jdkLevel>1.7</jdkLevel>
		<!-- jenkins cargo 8281,8282 -->
		<jetty.port>9090</jetty.port>
		<!-- version of jetty used by cxf 2.7.14 -->
		<jetty.runner.version>${jetty8.version}</jetty.runner.version>
		<!-- jenkins cargo 9090,9091 -->
		<jetty.stop.port>19097</jetty.stop.port>
		<jetty.version>${jetty9.version}</jetty.version>
		<jetty8.version>8.1.15.v20140411</jetty8.version>

		<jetty9.version>9.2.2.v20140723</jetty9.version>

		<junit.version>4.11</junit.version>
		<log4j.version>1.2.17</log4j.version>
		<maven.cargo.maven2.plugin.version>1.4.13</maven.cargo.maven2.plugin.version>
		<maven.compiler.plugin.version>3.1</maven.compiler.plugin.version>
		<maven.dependency.plugin.version>2.9</maven.dependency.plugin.version>
		<maven.failsafe.plugin.version>${maven.surefire.plugin.version}</maven.failsafe.plugin.version>
		<maven.jetty.eclipse.plugin.version>${jetty.version}</maven.jetty.eclipse.plugin.version>
		<maven.site.plugin.version>3.6</maven.site.plugin.version>
		<maven.sonar.plugin.version>3.7.0.1746</maven.sonar.plugin.version>
		<maven.surefire.plugin.version>2.18.1</maven.surefire.plugin.version>
		<maven.test.failure.skip>true</maven.test.failure.skip>
		<maven.test.it.skip>${maven.test.skip}</maven.test.it.skip>
		<!--<jdkVersion>1.7.0</jdkVersion> -->

		<maven.test.skip>false</maven.test.skip>
		<maven.test.ut.skip>${maven.test.skip}</maven.test.ut.skip>
		<maven.tomcat7.plugin.version>2.2</maven.tomcat7.plugin.version>

		<maven.zap.plugin.version>1.6-SNAPSHOT</maven.zap.plugin.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<selenium.driver.version>${selenium.version}</selenium.driver.version>
		<!--<selenium.version>2.46.0</selenium.version>-->
		<selenium.version>3.0.1</selenium.version>
		<servlet.api.version>2.5</servlet.api.version>
		<slf4j.version>1.7.5</slf4j.version>

		<!--<sonar.branch.name>master</sonar.branch.name>-->

		<sonar.build-stability.url>Jenkins:$BUILD_URL/..</sonar.build-stability.url>

		<!--<sonar.groovy.cobertura.reportPath>target/site/cobertura/coverage.xml</sonar.groovy.cobertura.reportPath>-->
		<sonar.cobertura.reportPath>target/site/cobertura/coverage.xml</sonar.cobertura.reportPath>
		<sonar.dependencyCheck.reportPath>${basedir}/target/dependency-check-report.xml</sonar.dependencyCheck.reportPath>
		<sonar.github.oauth>06895b871e3f2775b7497e809222be22770d0c05</sonar.github.oauth>
		<sonar.global.exclusions>**/generated/**</sonar.global.exclusions>
		<sonar.groovy.codenarc.reportPath>target/CodeNarcReport.xml</sonar.groovy.codenarc.reportPath>
		<!--<sonar.language>java</sonar.language>-->
		<!--
		<jetty.context.path.to.replace>jetty.context.path</jetty.context.path.to.replace>
		<jetty.context.path>/nabla</jetty.context.path>
		-->

		<!--<sonar.jdbc.url>jdbc:mysql://home.nabla.mobi:3306/sonar</sonar.jdbc.url>-->
		<!--<sonar.jdbc.url>jdbc:h2:tcp://192.168.0.29:9092/sonar</sonar.jdbc.url>-->
		<!--<sonar.jdbc.driver>com.mysql.jdbc.Driver</sonar.jdbc.driver>-->
		<!--
		<sonar.jdbc.driver>org.h2.Driver</sonar.jdbc.driver>
		<sonar.jdbc.username>sonar</sonar.jdbc.username>
		<sonar.jdbc.password>sonar</sonar.jdbc.password>
		<sonar.host.url>http://home.nabla.mobi:9000</sonar.host.url>
		-->
		<sonar.host.url>https://sonarcloud.io</sonar.host.url>
		<sonar.java.target>1.8</sonar.java.target>
		<!--<sonar.javascript.lcov.reportPath>${basedir}/target/lcov*.info</sonar.javascript.lcov.reportPath>-->
		<!--<sonar.javascript.lcov.reportPath>${basedir}/target/lcov.info</sonar.javascript.lcov.reportPath>-->
		<sonar.javascript.forceZeroCoverage>true</sonar.javascript.forceZeroCoverage>
		<sonar.javascript.lcov.itReportPath>${basedir}/target/lcov.info</sonar.javascript.lcov.itReportPath>
		<sonar.javascript.lcov.reportPath>${basedir}/target/lcov-karma.info</sonar.javascript.lcov.reportPath>
		<sonar.links.ci>${env.BUILD_URL}</sonar.links.ci>
		<sonar.links.scm>https://github.com/AlbanAndrieu</sonar.links.scm>
		<sonar.login>818224bf27cc74d98389c3d5c567e58ea7e058eb</sonar.login>
		<sonar.organization>albanandrieu-github</sonar.organization>
		<sonar.pitest.mode>reuseReport</sonar.pitest.mode>
		<sonar.pitest.reportsDirectory>target/pit-reports</sonar.pitest.reportsDirectory>

		<!--<jboss.port>8180</jboss.port> -->
		<!-- jenkins cargo 8182,8183 -->
		<tomcat.port>8280</tomcat.port>
		<webdriver.base.url>http://${cargo.host}:${cargo.port}</webdriver.base.url>
		<webdriver.chrome.driver>/var/lib/chromedriver</webdriver.chrome.driver>
		<webdriver.firefox.bin>/usr/lib/firefox/firefox</webdriver.firefox.bin>
		<zap.host>localhost</zap.host>
		<zap.proxy>8091</zap.proxy>
	</properties>

	<dependencies>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>${log4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<!--
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-simple</artifactId>
			<version>${slf4j.version}</version>
			<scope>runtime</scope>
		</dependency>
		 -->
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>${commons.lang.version}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>${commons.lang3.version}</version>
		</dependency>
		<dependency>
			<groupId>${jdbc.groupId}</groupId>
			<artifactId>${jdbc.client.artifactId}</artifactId>
			<version>${jdbc.version}</version>
			<!--<scope>provided</scope> -->
		</dependency>
		<!--
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-htmlunit-driver</artifactId>
			<version>${selenium.driver.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-server</artifactId>
			<scope>test</scope>
		</dependency>
		-->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>${servlet.api.version}</version>
			<scope>provided</scope>
		</dependency>
		<!-- Log4J Adapter for SLF4J -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>${slf4j.version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-java</artifactId>
			<version>${selenium.driver.version}</version>
			<scope>test</scope>
		</dependency>
		<!--
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-remote-driver</artifactId>
			<version>${selenium.driver.version}</version>
			<scope>test</scope>
		</dependency>
		-->
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-firefox-driver</artifactId>
			<version>${selenium.driver.version}</version>
			<scope>test</scope>
		</dependency>
		<!--
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-api</artifactId>
			<version>${selenium.driver.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-support</artifactId>
			<scope>test</scope>
		</dependency>
		-->
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-safari-driver</artifactId>
			<version>${selenium.driver.version}</version>
			<scope>test</scope>
		</dependency>
		<!--
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-iphone-driver</artifactId>
			<version>${selenium.driver.version}</version>
			<scope>test</scope>
		</dependency>
		-->
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-ie-driver</artifactId>
			<version>${selenium.driver.version}</version>
			<scope>test</scope>
		</dependency>
		<!--
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-android-driver</artifactId>
			<version>${selenium.driver.version}</version>
			<scope>test</scope>
		</dependency>
		-->
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-chrome-driver</artifactId>
			<version>${selenium.driver.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<finalName>bodgeit</finalName>

		<plugins>
			<!-- deprecated
			<plugin>
			  <groupId>org.codehaus.mojo</groupId>
			  <artifactId>sonar-maven-plugin</artifactId>
			  <version>${maven.sonar.plugin.version}</version>
			</plugin>
			-->
			<plugin>
				<groupId>org.sonarsource.scanner.maven</groupId>
				<artifactId>sonar-maven-plugin</artifactId>
				<version>${maven.sonar.plugin.version}</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>${maven.site.plugin.version}</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven.compiler.plugin.version}</version>
				<configuration>
					<source>${jdkLevel}</source>
					<target>${jdkLevel}</target>
					<debug>off</debug>
					<debuglevel>none</debuglevel>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${maven.surefire.plugin.version}</version>
				<configuration>
					<skipTests>${maven.test.skip}</skipTests>
					<testFailureIgnore>${maven.test.failure.skip}</testFailureIgnore>
					<excludes>
						<exclude>**/*ITest*</exclude>
						<exclude>**/*STest*</exclude>
					</excludes>
					<systemPropertyVariables>
						<webdriver.chrome.driver>${webdriver.chrome.driver}</webdriver.chrome.driver>
						<webdriver.firefox.bin>${webdriver.firefox.bin}</webdriver.firefox.bin>
						<webdriver.safari.noinstall>true</webdriver.safari.noinstall>
					</systemPropertyVariables>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>${maven.failsafe.plugin.version}</version>
				<executions>
					<execution>
						<id>integration-test</id>
						<phase>integration-test</phase>
						<goals>
							<goal>integration-test</goal>
						</goals>
					</execution>
					<execution>
						<id>verify</id>
						<phase>verify</phase>
						<goals>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<!--<argLine>${failsafe.argLine}</argLine> -->
					<skipTests>${maven.test.skip}</skipTests>
					<skipITs>${maven.test.it.skip}</skipITs>
					<parallel>classes</parallel>
					<threadCount>1</threadCount>
					<forkCount>1</forkCount>
					<reuseForks>false</reuseForks>
					<reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
				</configuration>
			</plugin>

			<!-- for automatic running of integration tests with Jetty -->
			<plugin>
				<groupId>org.codehaus.cargo</groupId>
				<artifactId>cargo-maven2-plugin</artifactId>
				<version>${maven.cargo.maven2.plugin.version}</version>
				<configuration>
					<wait>${cargo.wait}</wait>
					<container>
						<timeout>180000</timeout>
						<!-- 5 minutes -->
						<!--<containerId>${cargo.container}</containerId> -->
						<!--<type>${cargo.container.type}</type> -->
					</container>
					<configuration>
						<!--<type>${cargo.configuration.type}</type> -->
						<!--<home>${project.build.directory}/cargo/installs/jboss-as-dist-7.1.1.Final/jboss-as-7.1.1.Final/standalone/</home> -->
						<properties>
							<cargo.hostname>${cargo.host}</cargo.hostname>
							<cargo.servlet.port>${cargo.port}</cargo.servlet.port>
							<cargo.tomcat.manager.url>${deploy.url}</cargo.tomcat.manager.url>
							<cargo.remote.username>${cargo.remote.user}</cargo.remote.username>
							<cargo.remote.password>${cargo.remote.password}</cargo.remote.password>
							<cargo.logging>high</cargo.logging>
							<!-- <cargo.jvmargs> -Dnabla.config=${basedir}/src/main/resources
								-Dnabla.data=${basedir}/src/test/resources/data -->
							<!-- -agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=5005 -->
							<!-- </cargo.jvmargs> -->
						</properties>
					</configuration>
					<deployables>
						<deployable>
							<groupId>com.nabla.project.servers.sample</groupId>
							<artifactId>thebodgeitstore</artifactId>
							<type>war</type>
							<properties>
								<context>/bodgeit</context>
							</properties>
							<pingURL>http://${cargo.host}:${cargo.port}/bodgeit</pingURL>
							<pingTimeout>60000</pingTimeout>
						</deployable>
					</deployables>
				</configuration>
			</plugin>

			<plugin>
				<!-- Allow this web application to be started with the command : 'mvn jetty:run-war -Psample -Dserver=jetty9x -Ddatabase=hsqldb -Djetty.port=9090' -->
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>${maven.jetty.eclipse.plugin.version}</version>
				<configuration>
					<scanIntervalSeconds>10</scanIntervalSeconds>
					<webApp>
						<contextPath>/bodgeit</contextPath>
					</webApp>
					<useTestClasspath>true</useTestClasspath>
					<useTestClasspath>true</useTestClasspath>
					<httpConnector>
						<!--host>localhost</host -->
						<port>${jetty.port}</port>
					</httpConnector>
					<stopPort>${jetty.stop.port}</stopPort>
					<stopKey>STOP</stopKey>
					<stopWait>10</stopWait>
				</configuration>
			</plugin>

			<!-- start app using java -jar target/dependency/jetty-runner.jar target/*.war
				-port 9090 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>${maven.dependency.plugin.version}</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>copy</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>org.mortbay.jetty</groupId>
									<artifactId>jetty-runner</artifactId>
									<version>${jetty.runner.version}</version>
									<destFileName>jetty-runner.jar</destFileName>
								</artifactItem>
							</artifactItems>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Allow this web application to be started with the command : 'mvn
				tomcat7:run' -->
			<plugin>
				<groupId>org.apache.tomcat.maven</groupId>
				<artifactId>tomcat7-maven-plugin</artifactId>
				<version>${maven.tomcat7.plugin.version}</version>
				<dependencies>
					<dependency>
						<groupId>com.nabla.project.servers.sample</groupId>
						<artifactId>thebodgeitstore</artifactId>
						<version>${project.version}</version>
						<type>war</type>
					</dependency>
					<!-- <dependency> <groupId>${jdbc.groupId}</groupId> <artifactId>${jdbc.client.artifactId}</artifactId>
						<version>${jdbc.version}</version> <scope>runtime</scope> </dependency> -->
				</dependencies>
				<configuration>
					<!-- http port -->
					<port>${tomcat.port}</port>
					<path>/bodgeit</path>
					<!--<contextFile>${basedir}/src/main/webapp/META-INF/context.xml</contextFile> -->
					<addWarDependenciesInClassloader>true</addWarDependenciesInClassloader>
					<!-- <systemProperties> <java.security.auth.login.config>${basedir}/conf/jaas.config</java.security.auth.login.config>
						</systemProperties> -->
					<url>${deploy.url}</url>
					<username>${cargo.remote.user}</username>
					<password>${cargo.remote.password}</password>
					<addContextWarDependencies>true</addContextWarDependencies>
					<addWarDependenciesInClassloader>true</addWarDependenciesInClassloader>
					<!--<configurationDir>${basedir}</configurationDir> -->
					<server>nabla-tomcat</server>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>run-its</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
						<version>${maven.failsafe.plugin.version}</version>
						<configuration>
							<skipTests>${maven.test.skip}</skipTests>
							<skipITs>${maven.test.it.skip}</skipITs>
							<includes>
								<include>**/*ITest*</include>
								<include>**/*STest*</include>
							</includes>
							<!-- exclude cucumber tests as it does not work with jacoco <excludes>
								<exclude>**/RunCukesSTest.java</exclude> </excludes> -->
						</configuration>
						<!-- <executions> <execution> <id>integration-test</id> <phase>integration-test</phase>
							<goals> <goal>integration-test</goal> </goals> </execution> <execution> <id>verify</id>
							<phase>verify</phase> <goals> <goal>verify</goal> </goals> </execution> </executions> -->
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<configuration>
							<skipTests>${maven.test.ut.skip}</skipTests>
							<testFailureIgnore>${maven.test.failure.skip}</testFailureIgnore>
							<redirectTestOutputToFile>true</redirectTestOutputToFile>
							<trimStackTrace>false</trimStackTrace>
							<printSummary>true</printSummary>
							<!-- <excludes> <exclude>**/*ITest*</exclude> <exclude>**/*STest*</exclude>
								</excludes> -->
							<systemPropertyVariables>
								<webdriver.chrome.driver>${webdriver.chrome.driver}</webdriver.chrome.driver>
								<webdriver.firefox.bin>${webdriver.firefox.bin}</webdriver.firefox.bin>
								<webdriver.safari.noinstall>true</webdriver.safari.noinstall>
							</systemPropertyVariables>
							<!-- workaround for jacoco and jmockit to work altogether <argLine>-javaagent:${settings.localRepository}/com/googlecode/jmockit/jmockit/${googlecode.jmockit.version}/jmockit-${googlecode.jmockit.version}.jar</argLine> -->
						</configuration>
						<!-- <executions> <execution> <id>surefire-itest</id> <phase>integration-test</phase>
							<goals> <goal>test</goal> </goals> <configuration> <excludes> <exclude>none</exclude>
							</excludes> <includes> <include>**/*ITest*</include> <include>**/*STest*</include>
							</includes> </configuration> </execution> </executions> -->
					</plugin>
					<plugin>
						<groupId>org.owasp.zaproxy</groupId>
						<artifactId>zap-maven-plugin</artifactId>
						<version>${maven.zap.plugin.version}</version>
						<executions>
							<execution>
								<id>startZAP</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>start-zap</goal>
								</goals>
							</execution>
							<execution>
								<id>processZAP</id>
								<phase>integration-test</phase>
								<goals>
									<goal>process-zap</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<!-- Windows -->
							<!--<zapProgram>C:\Work\Tools\ZAProxy\zap.bat</zapProgram> -->
							<!-- Mac OS X -->
							<!-- <zapProgram>/Users/davidtillemans/Tools/ZAP/zap.sh</zapProgram> -->
							<!-- Linux -->
							<zapProgram>/workspace/divers/zaproxy-read-only/build/zap/zap.sh</zapProgram>
							<zapProxyHost>${zap.host}</zapProxyHost>
							<zapProxyPort>${zap.proxy}</zapProxyPort>
							<apiKey>7c3sdphhcg24l7hnjj0dgeg3as</apiKey>
							<targetURL>http://localhost:9090/bodgeit/</targetURL>
							<saveSession>false</saveSession>
							<shutdownZAP>false</shutdownZAP>
							<!--<shutdownZAP>true</shutdownZAP>-->
							<!--<format>json</format>-->
							<format>html</format>
							<!--<format>xml</format>-->
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>jetty9x</id>
			<activation>
				<property>
					<!-- <name>server</name> <value>jetty9x</value> -->
					<name>!server</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.cargo</groupId>
						<artifactId>cargo-maven2-plugin</artifactId>
						<executions>
							<execution>
								<id>start-container</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>start</goal>
								</goals>
								<configuration>
									<configuration>
										<properties>
											<cargo.jvmargs>${jacoco.agent.it.arg}</cargo.jvmargs>
										</properties>
									</configuration>
								</configuration>
							</execution>
							<execution>
								<id>stop-container</id>
								<phase>post-integration-test</phase>
								<goals>
									<goal>stop</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<container>
								<containerId>${cargo.container}</containerId>
								<artifactInstaller>
									<groupId>org.eclipse.jetty</groupId>
									<artifactId>jetty-distribution</artifactId>
									<version>${server.version}</version>
								</artifactInstaller>
							</container>
						</configuration>
					</plugin>
				</plugins>
			</build>
			<properties>
				<cargo.configuration.type>standalone</cargo.configuration.type>

				<cargo.container>jetty9x</cargo.container>
				<cargo.container.home>${project.build.directory}/jetty</cargo.container.home>
				<cargo.container.type>installed</cargo.container.type>
				<cargo.container.url>TODOjetty9</cargo.container.url>
				<cargo.deployables.type></cargo.deployables.type>

				<cargo.jmx.activation>${cargo.jetty.jmx.activation}</cargo.jmx.activation>
				<cargo.port>${jetty.port}</cargo.port>
				<datasource>${datasource.name}</datasource>
				<jetty.version>${jetty9.version}</jetty.version>
				<scope.tomcat.never.type>${scope.provided}</scope.tomcat.never.type>
				<scope.tomcat.only.type>${scope.compile}</scope.tomcat.only.type>

				<scope.type>${scope.compile}</scope.type>
				<server.home></server.home>
				<server.name>${product.name}</server.name>
				<server.port></server.port>
				<server.version>${jetty.version}</server.version>
			</properties>
		</profile>
		<profile>
			<id>tomcat8x</id>
			<!--<id>tomcat8x-embedded</id> -->
			<activation>
				<property>
					<name>server</name>
					<value>tomcat8x</value>
				</property>
			</activation>
			<!-- todo tomcatee <dependencies> <dependency> <groupId>org.apache.openejb</groupId>
				<artifactId>apache-tomee</artifactId> <version>1.6.0</version> </dependency>
				</dependencies> -->
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.cargo</groupId>
						<artifactId>cargo-maven2-plugin</artifactId>
						<executions>
							<execution>
								<id>start</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>start</goal>
									<goal>deployer-deploy</goal>
								</goals>
							</execution>
							<execution>
								<id>stop</id>
								<phase>post-integration-test</phase>
								<goals>
									<goal>deployer-undeploy</goal>
									<goal>stop</goal>
								</goals>
							</execution>
							<!-- <execution> <id>package</id> <phase>post-integration-test</phase>
								<goals> <goal>package</goal> </goals> </execution> -->
						</executions>
						<configuration>
							<skip>${maven.test.skip}</skip>
							<wait>${cargo.wait}</wait>
							<configuration>
								<type>${cargo.configuration.type}</type>
								<!--<home>${cargo.configuration.home}</home> -->
								<properties>
									<cargo.remote.username>${cargo.remote.user}</cargo.remote.username>
									<cargo.remote.password>${cargo.remote.password}</cargo.remote.password>
									<cargo.remote.uri>${deploy.url}</cargo.remote.uri>
									<cargo.logging>high</cargo.logging>
									<cargo.servlet.port>${cargo.port}</cargo.servlet.port>
									<cargo.rmi.port>${cargo.rmi.port}</cargo.rmi.port>
									<cargo.tomcat.ajp.port>${cargo.tomcat.ajp.port}</cargo.tomcat.ajp.port>
								</properties>
							</configuration>
							<container>
								<containerId>${cargo.container}</containerId>
								<type>${cargo.container.type}</type>
								<log>${project.build.directory}/cargo.log</log>
								<logLevel>debug</logLevel>
								<!--<home>${cargo.container.home}</home> -->
								<systemProperties>
									<webdriver.base.url>${webdriver.base.url}</webdriver.base.url>
								</systemProperties>
								<zipUrlInstaller>
									<url>${cargo.container.url}</url>
									<!--<installdir>${project.build.directory}/container-install-${cargo.port}</installdir> -->
								</zipUrlInstaller>
							</container>
							<packager>
								<outputLocation>${project.build.directory}/tomcat-packaged</outputLocation>
							</packager>
						</configuration>
					</plugin>
				</plugins>
			</build>
			<properties>
				<!--<cargo.configuration.type>runtime</cargo.configuration.type> -->
				<!--<cargo.configuration.home>${tomcat.home}</cargo.configuration.home> -->
				<cargo.configuration.home>${project.build.directory}/catalina-base</cargo.configuration.home>
				<!--<cargo.container.type>remote</cargo.container.type> -->
				<!--<cargo.configuration.type>existing</cargo.configuration.type> -->
				<cargo.configuration.type>standalone</cargo.configuration.type>

				<cargo.container>tomcat8x</cargo.container>
				<cargo.container.home>${tomcat.home}</cargo.container.home>
				<cargo.container.type>installed</cargo.container.type>
				<cargo.container.url>http://archive.apache.org/dist/tomcat/tomcat-8/v${server.version}/bin/apache-tomcat-${server.version}.zip</cargo.container.url>
				<cargo.deployables.type></cargo.deployables.type>

				<cargo.jmx.activation>${cargo.tomcat.jmx.activation}</cargo.jmx.activation>
				<cargo.port>${tomcat.port}</cargo.port>
				<!--<datasource>${datasource.name}</datasource> -->
				<datasource>openejb:Resource/jdbc/${datasource.name}</datasource>
				<deploy.url>http://${cargo.host}:${tomcat.port}/manager/text</deploy.url>
				<scope.tomcat.never.type>${scope.provided}</scope.tomcat.never.type>
				<scope.tomcat.only.type>${scope.compile}</scope.tomcat.only.type>

				<scope.type>${scope.compile}</scope.type>
				<!--<tomcat.home>/tomcat-7.0</tomcat.home> -->
				<server.home>${tomcat.home}</server.home>
				<server.name>${product.name}</server.name>
				<server.port>${tomcat.port}</server.port>
				<server.version>8.0.3</server.version>
				<tomcat.home>${env.CATALINA_BASE}</tomcat.home>
			</properties>
		</profile>
	</profiles>
</project>
